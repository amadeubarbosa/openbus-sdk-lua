# -*- coding: iso-8859-1-unix -*-

import os ;
import modules ;

path-constant here : . ;
path-constant root : $(here)/.. ;
path-constant deps : $(root)/.. ;

local lua = [ os.environ LUA ] ;
if ! $(lua)
{
  lua = "$(deps)/lua" ;
}
use-project lua : $(lua)/bbuild ; 

local luuid = [ os.environ LUUID ] ;
if ! $(luuid)
{
  luuid = "$(deps)/luuid" ;
}
use-project luuid : $(luuid)/bbuild ;

local openssl-jam = [ os.environ OPENSSL_JAM ] ;
if ! $(openssl-jam)
{
  openssl-jam = "$(deps)/openssl.jam" ;
}
use-project openssl : $(openssl-jam) ; 

local lce = [ os.environ LCE ] ;
if ! $(lce)
{
  lce = "$(deps)/lce" ;
}
use-project lce : $(lce)/bbuild ;

local lfs = [ os.environ LUAFILESYSTEM ] ;
if ! $(lfs)
{
  lfs = "$(deps)/luafilesystem" ;
}
use-project lfs : $(lfs)/bbuild ;

local luavararg = [ os.environ LUAVARARG ] ;
if ! $(luavararg)
{
  luavararg = "$(deps)/luavararg" ;
}
use-project luavararg : $(luavararg)/bbuild ;

local luastruct = [ os.environ LUASTRUCT ] ;
if ! $(luastruct)
{
  luastruct = "$(deps)/luastruct" ;
}
use-project luastruct : $(luastruct)/bbuild ;

local luasocket = [ os.environ LUASOCKET ] ;
if ! $(luasocket)
{
  luasocket = "$(deps)/luasocket" ;
}
use-project luasocket : $(luasocket)/bbuild ;

local loop = [ os.environ LOOP ] ;
if ! $(loop)
{
  loop = "$(deps)/loop" ;
}
use-project loop : $(loop)/bbuild ;

local oil = [ os.environ OIL ] ;
if ! $(oil)
{
  oil = "$(deps)/oil" ;
}
use-project oil : $(oil)/bbuild ;

local luascs = [ os.environ LUASCS ] ;
if ! $(luascs)
{
  luascs = "$(deps)/luascs" ;
}
use-project luascs : $(luascs)/bbuild ;

local luasec = [ os.environ LUASEC ] ;
if ! $(luasec)
{
  luasec = "$(deps)/luasec" ;
}
use-project luasec : $(luasec)/bbuild ;

scs-idl = [ os.environ SCS_IDL ] ;
if ! $(scs-idl)
{
  scs-idl = "$(deps)/scs-idl" ;
}

openbus-idl = [ os.environ OPENBUS_IDL ] ;
if ! $(openbus-idl)
{
  openbus-idl = "$(deps)/openbus-idl" ;
}

openbus-legacy-idl = [ os.environ OPENBUS_LEGACY_IDL ] ;
if ! $(openbus-legacy-idl)
{
  openbus-legacy-idl = "$(deps)/openbus-legacy-idl" ;
}

openbus-lib-idl = [ os.environ OPENBUS_LIB_IDL ] ;
if ! $(openbus-lib-idl)
{
  openbus-lib-idl = "$(deps)/openbus-lib-idl" ;
}

modules.load preloader : : $(loop)/bbuild ;
import preloader ; 

using preloader : $(lua) ;

project luaopenbus
  : requirements
    <target-os>windows:<pch>off
    <target-os>windows,<link>shared:<runtime-link>shared
    <target-os>windows,<link>static:<runtime-link>static
    <target-os>windows:<debug-store>database
    <target-os>windows:<define>_CRT_SECURE_NO_WARNINGS
    <toolset>msvc-12.0:<cxxflags>/FS
    <debug-symbols>on
  : default-build
    <variant>release
    <link>static
  ;

make luaopenbus.c
  : 
    $(root)/lua/openbus/assistant.lua
    $(root)/lua/openbus/assistant2.lua
    $(root)/lua/openbus/core/Access.lua
    $(root)/lua/openbus/core/idl/makeaux.lua
    $(root)/lua/openbus/core/idl.lua
    $(root)/lua/openbus/core/legacy/idl.lua
    $(root)/lua/openbus/core/legacy/parsed.lua
    $(root)/lua/openbus/core/messages.lua
    $(root)/lua/openbus/console/costdin.lua
    $(root)/lua/openbus/console/utils.lua    
    $(root)/lua/openbus/idl/parsed.lua
    $(root)/lua/openbus/idl.lua
    $(root)/lua/openbus/util/argcheck.lua
    $(root)/lua/openbus/util/autotable.lua
    $(root)/lua/openbus/util/database.lua
    $(root)/lua/openbus/util/except.lua
    $(root)/lua/openbus/util/logger.lua
    $(root)/lua/openbus/util/messages.lua
    $(root)/lua/openbus/util/oo.lua
    $(root)/lua/openbus/util/sandbox.lua
    $(root)/lua/openbus/util/server.lua
    $(root)/lua/openbus/util/sysex.lua
    $(root)/lua/openbus/util/tickets.lua
    $(root)/lua/openbus.lua
    $(root)/src/lthreadlib.c
    $(root)/src/lecholib.c
    $(root)/lua/openbus/core/idl/parsed.lua
  : preloader.pre-compile
  : <search>$(root)
    <location>$(here)
  ;

make luaconsole.c
  : $(root)/lua/openbus/console.lua
  : preloader.pre-compile
  : <dependency>/lua//stage
    <search>$(root)
    <location>$(here)
  ;

modules.load idl2lua : : $(oil)/bbuild ;
import idl2lua ; 
using idl2lua : $(lua) ;

make $(root)/lua/openbus/idl/parsed.lua 
  : $(openbus-lib-idl)/src/openbus.idl
    $(openbus-lib-idl)/src/corba.idl
    $(openbus-idl)/src/openbus_access-2.1.idl
    $(openbus-idl)/src/openbus_offers-2.1.idl
    $(openbus-idl)/src/openbus_export-2.1.idl
    $(openbus-idl)/src/openbus_core-2.1.idl
    $(openbus-idl)/src/openbus_creden-2.1.idl
    $(scs-idl)/src/scs.idl
  : idl2lua.compile
  : <include>$(openbus-lib-idl)/src
    <include>$(openbus-idl)/src
    <include>$(scs-idl)/src
    <location>$(here)
  ;

make $(root)/lua/openbus/core/idl/parsed.lua 
  : $(openbus-idl)/src/openbus_access-2.1.idl
    $(openbus-idl)/src/openbus_offers-2.1.idl
    $(openbus-idl)/src/openbus_export-2.1.idl
    $(openbus-idl)/src/openbus_core-2.1.idl
    $(openbus-idl)/src/openbus_creden-2.1.idl
    $(scs-idl)/src/scs.idl
  : idl2lua.compile
  : <include>$(openbus-idl)/src
    <include>$(openbus-legacy-idl)/src
    <include>$(scs-idl)/src
    <location>$(here)
  ;

make $(root)/lua/openbus/core/legacy/parsed.lua 
  : $(openbus-legacy-idl)/src/access_control.idl
    $(openbus-legacy-idl)/src/offer_registry.idl
    $(openbus-legacy-idl)/src/data_export.idl
    $(openbus-legacy-idl)/src/core.idl
    $(openbus-legacy-idl)/src/credential.idl
    $(scs-idl)/src/scs.idl
    $(openbus-idl)/src/openbus_legacy-2.1.idl
    $(openbus-idl)/src/openbus_access-2.1.idl
    $(openbus-idl)/src/openbus_core-2.1.idl
    $(openbus-idl)/src/openbus_creden-2.1.idl
  : idl2lua.compile
  : <include>$(openbus-legacy-idl)/src
    <include>$(openbus-idl)/src
    <include>$(scs-idl)/src
    <location>$(here)
  ;

lib luaopenbus
  : luaopenbus.c
    $(root)/src/openbuslua.c
    $(root)/src/lthreadlib.c
    $(root)/src/lecholib.c
    /lua//lua
    /luuid//luuid
    /lce//lce
    /luafilesystem//lfs
    /luavararg//luavararg
    /luastruct//luastruct
    /luasocket//luasocket
    /loop//loop
    /loop//luatuple
    /loop//luacothread
    /oil//oil
    /oil//luaidl
    /luascs//luascs
    /luasec//luasec
  : <dependency>/lce//lce
    <dependency>/luasec//luasec
    <dependency>/loop//loop
    <dependency>/loop//luacothread
    <dependency>/loop//luatuple
    <dependency>/oil//oil
    <dependency>/oil//luaidl
    <dependency>/luascs//luascs
    <dependency>/luasocket//luasocket
    <dependency>/luastruct//luastruct
    <dependency>/luavararg//luavararg    
    <dependency>luaopenbus.c
    <include>$(root)/src
    <include>$(here)
    <target-os>windows,<link>shared:<linkflags>"/def:$(here)/luaopenbus.def"
  :
  : <include>$(here)
    <include>$(root)/src
  ;
explicit luaopenbus ;

exe busconsole
  : $(root)/src/launcher.c
    $(root)/src/consolelibs.c
    luaconsole.c
    /lua//lua
    /luuid//luuid
    /lce//lce
    /luafilesystem//lfs
    /luavararg//luavararg
    /luastruct//luastruct
    /luasocket//luasocket
    /loop//loop
    /loop//luatuple
    /loop//luacothread
    /oil//oil
    /oil//luaidl
    /luascs//luascs
    /luaopenbus//luaopenbus    
  : <dependency>/loop//loop
    <dependency>/loop//luatuple
    <dependency>/loop//luacothread
    <dependency>/oil//oil
    <dependency>/oil//luaidl
    <dependency>/lce//lce
    <dependency>/luascs//luascs
    <dependency>/luaopenbus//luaopenbus
    <dependency>luaconsole.c
    <define>OPENBUS_PROGNAME=\\\""busconsole\\\""
;
explicit busconsole ;

install stage
  : luaopenbus
    busconsole
  : <location>install
  ;

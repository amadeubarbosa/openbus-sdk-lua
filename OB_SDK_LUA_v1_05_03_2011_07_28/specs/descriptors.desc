SUNOS64_TECMAKE_FLAGS="USE_NODEPEND=Yes TEC_UNAME=SunOS510_64 BUILD_64=yes"
descriptors = {
  { name = "oil-source",
    url = SVNREPURL.."/openbus/libs/trunk/oil-0.5.0",
    directory = PRODAPP.."/oil-0.5.0",
  },
  { name = "loop",
    build = {
      type = "tecmake",
      src = PRODAPP.."/oil-0.5.0",
      mf = { },
    },
    dev_files = {
      ["lua/loop"] = "lib/lua/5.1", 
      ["lua/precompiler.lua"] = "lib/lua/5.1",
      ["lua/preloader.lua"] = "lib/lua/5.1",
    },
  },
  { name = "lua5.1-source",
    url = SVNREPURL.."/openbus/libs/trunk/lua5.1.3",
    directory = PRODAPP.."/lua5.1",
  },
  { name = "lua5.1",
    build = {
      type = "tecmake",
      src = PRODAPP .."/lua5.1/src",
      mf = { "config" },
      Darwin = { mf = {"config", "config BUILD_DYLIB=Yes"} },
      SunOS510_64 = { mf = {"config ".. SUNOS64_TECMAKE_FLAGS} },
    },
    install_files = {
      ["../lib/${TEC_UNAME}/liblua5.1.so"] = "lib",
      ["../lib/${TEC_UNAME}/liblua5.1.dylib"] = "lib",
    },
    dev_files = {
      ["../lib/${TEC_UNAME}/liblua5.1.*"] = "lib",
      ["../include/*"] = "include/lua5.1.3",
    },
  },
  { name = "lua5.1-bin",
    build = {
      type = "tecmake",
      src = PRODAPP .."/lua5.1/src",
      mf = { "lua", --[["luac", "bin2c",]] },
      SunOS510_64 = { mf = {"lua ".. SUNOS64_TECMAKE_FLAGS} },
    },
    install_files = {
      ["../bin/${TEC_UNAME}/lua5.1"] = "bin",
    },
  },
  {
    name = "latt-1.0.0",
    url = SVNREPURL .. "/openbus/libs/trunk/latt-1.0.0",
    build = {
      type = "tecmake",
      src = PRODAPP .."/latt-1.0.0",
      mf = { },
    },
    dev_files = {
      ["lua/*"] = "lib/lua/5.1"
    },
  },
  { name = "openbus-api",
    build = {
      type = "tecmake",
      src = SVNDIR,
      mf = { "config LUA51="..PRODAPP.."/lua5.1" },
      Darwin = { mf = { "config LUA51="..PRODAPP.."/lua5.1","config LUA51="..PRODAPP.."/lua5.1 BUILD_DYLIB=YES" }, },
    },
    install_files = {
      ["lib/${TEC_UNAME}/libluaopenbus.so"] = "lib",
      ["lib/${TEC_UNAME}/libluaopenbus.dylib"] = "lib",
      ["openbus"] = "lib/lua/5.1",
    },
    dev_files = {
      ["lib/${TEC_UNAME}/libluaopenbus.*"] = "lib",
      ["obj/${TEC_UNAME}/openbus.h"] = "include/openbus/lua/",
    },
  },
  { name = "openbus-demo-hello",
    build = {
      type = "tecmake",
      src = SVNDIR .."/demo/hello",
      mf = { },
    },
    dev_files = {
      ["client.lua"] = "demo/lua/hello",
      ["server.lua"] = "demo/lua/hello",
      ["run"] = "demo/lua/hello",
      ["Hello.properties"] = "demo/lua/hello",
      ["idl"] = "demo/lua/hello",
      ["management"] = "demo/lua/hello",
    },
  },
  { name = "openbus-demo-eventsink",
    build = {
      type = "tecmake",
      src = SVNDIR .."/demo/eventSink",
      mf = { },
    },
    dev_files = {
      ["client.lua"] = "demo/lua/eventSink",
      ["client.sh"] = "demo/lua/eventSink",
      ["server.lua"] = "demo/lua/eventSink",
      ["server.sh"] = "demo/lua/eventSink",
      ["EventSink.properties"] = "demo/lua/eventSink",
      ["management"] = "demo/lua/eventSink",
    },
  },
  { name = "openbus-demo-delegate",
    build = {
      type = "tecmake",
      src = SVNDIR .."/demo/delegate",
      mf = { },
    },
    dev_files = {
      ["client.lua"] = "demo/lua/delegate",
      ["server.lua"] = "demo/lua/delegate",
      ["run"] = "demo/lua/delegate",
      ["Delegate.properties"] = "demo/lua/delegate",
      ["idl"] = "demo/lua/delegate",
      ["management"] = "demo/lua/delegate",
    },
  },
}
